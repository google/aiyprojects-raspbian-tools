# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messages.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='messages.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0emessages.proto\"\xfa\x01\n\x07Request\x12&\n\tget_state\x18\x01 \x01(\x0b\x32\x11.GetState.RequestH\x00\x12%\n\x08identify\x18\x02 \x01(\x0b\x32\x11.Identify.RequestH\x00\x12.\n\rscan_networks\x18\x03 \x01(\x0b\x32\x15.ScanNetworks.RequestH\x00\x12\x32\n\x0f\x63onnect_network\x18\x04 \x01(\x0b\x32\x17.ConnectNetwork.RequestH\x00\x12\x31\n\x0fset_device_name\x18\x05 \x01(\x0b\x32\x16.SetDeviceName.RequestH\x00\x42\t\n\x07request\"\x81\x02\n\x08Response\x12\'\n\tget_state\x18\x01 \x01(\x0b\x32\x12.GetState.ResponseH\x00\x12&\n\x08identify\x18\x02 \x01(\x0b\x32\x12.Identify.ResponseH\x00\x12/\n\rscan_networks\x18\x03 \x01(\x0b\x32\x16.ScanNetworks.ResponseH\x00\x12\x33\n\x0f\x63onnect_network\x18\x04 \x01(\x0b\x32\x18.ConnectNetwork.ResponseH\x00\x12\x32\n\x0fset_device_name\x18\x05 \x01(\x0b\x32\x17.SetDeviceName.ResponseH\x00\x42\n\n\x08response\"\x9f\x01\n\x08WifiInfo\x12\"\n\x05state\x18\x01 \x01(\x0e\x32\x13.WifiInfo.WifiState\x12\x0c\n\x04ssid\x18\x02 \x01(\t\x12\n\n\x02ip\x18\x03 \x01(\t\x12\x0c\n\x04rssi\x18\x04 \x01(\x11\"G\n\tWifiState\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08\x44ISABLED\x10\x01\x12\x10\n\x0c\x44ISCONNECTED\x10\x02\x12\r\n\tCONNECTED\x10\x03\"\xa0\x01\n\x08GetState\x1a\t\n\x07Request\x1a\x88\x01\n\x08Response\x12\x1f\n\x06status\x18\x01 \x01(\x0e\x32\x0f.ResponseStatus\x12\x18\n\x10protocol_version\x18\x02 \x01(\r\x12\x1c\n\twifi_info\x18\x03 \x01(\x0b\x32\t.WifiInfo\x12\x0e\n\x06kit_id\x18\x04 \x01(\r\x12\x13\n\x0b\x64\x65vice_name\x18\x05 \x01(\t\"|\n\x08Identify\x1a&\n\x07Request\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\x12\r\n\x05\x65xtra\x18\x02 \x01(\x0c\x1aH\n\x08Response\x12\x1f\n\x06status\x18\x01 \x01(\x0e\x32\x0f.ResponseStatus\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\x12\r\n\x05\x65xtra\x18\x03 \x01(\x0c\"\xc6\x01\n\x0cScanNetworks\x1a\x1a\n\x07Request\x12\x0f\n\x07timeout\x18\x01 \x01(\r\x1a\x99\x01\n\x08Response\x12\x1f\n\x06status\x18\x01 \x01(\x0e\x32\x0f.ResponseStatus\x12\x32\n\x07results\x18\x02 \x03(\x0b\x32!.ScanNetworks.Response.ScanResult\x1a\x38\n\nScanResult\x12\x0c\n\x04ssid\x18\x01 \x01(\t\x12\x0e\n\x06secure\x18\x02 \x01(\x08\x12\x0c\n\x04rssi\x18\x03 \x01(\x11\"\x92\x01\n\x0e\x43onnectNetwork\x1a\x35\n\x07Request\x12\x0f\n\x07timeout\x18\x01 \x01(\r\x12\x0c\n\x04ssid\x18\x02 \x01(\t\x12\x0b\n\x03psk\x18\x03 \x01(\t\x1aI\n\x08Response\x12\x1f\n\x06status\x18\x01 \x01(\x0e\x32\x0f.ResponseStatus\x12\x1c\n\twifi_info\x18\x02 \x01(\x0b\x32\t.WifiInfo\"q\n\rSetDeviceName\x1a\x1e\n\x07Request\x12\x13\n\x0b\x64\x65vice_name\x18\x01 \x01(\t\x1a@\n\x08Response\x12\x1f\n\x06status\x18\x01 \x01(\x0e\x32\x0f.ResponseStatus\x12\x13\n\x0b\x64\x65vice_name\x18\x02 \x01(\t*7\n\x0eResponseStatus\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07SUCCESS\x10\x01\x12\x0b\n\x07\x46\x41ILURE\x10\x02\x42#\n!com.google.android.apps.aiy.protob\x06proto3')
)

_RESPONSESTATUS = _descriptor.EnumDescriptor(
  name='ResponseStatus',
  full_name='ResponseStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILURE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1447,
  serialized_end=1502,
)
_sym_db.RegisterEnumDescriptor(_RESPONSESTATUS)

ResponseStatus = enum_type_wrapper.EnumTypeWrapper(_RESPONSESTATUS)
UNKNOWN = 0
SUCCESS = 1
FAILURE = 2


_WIFIINFO_WIFISTATE = _descriptor.EnumDescriptor(
  name='WifiState',
  full_name='WifiInfo.WifiState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISABLED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISCONNECTED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONNECTED', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=620,
  serialized_end=691,
)
_sym_db.RegisterEnumDescriptor(_WIFIINFO_WIFISTATE)


_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='get_state', full_name='Request.get_state', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='identify', full_name='Request.identify', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scan_networks', full_name='Request.scan_networks', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='connect_network', full_name='Request.connect_network', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='set_device_name', full_name='Request.set_device_name', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='request', full_name='Request.request',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=19,
  serialized_end=269,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='get_state', full_name='Response.get_state', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='identify', full_name='Response.identify', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scan_networks', full_name='Response.scan_networks', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='connect_network', full_name='Response.connect_network', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='set_device_name', full_name='Response.set_device_name', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='response', full_name='Response.response',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=272,
  serialized_end=529,
)


_WIFIINFO = _descriptor.Descriptor(
  name='WifiInfo',
  full_name='WifiInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='WifiInfo.state', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ssid', full_name='WifiInfo.ssid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ip', full_name='WifiInfo.ip', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rssi', full_name='WifiInfo.rssi', index=3,
      number=4, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _WIFIINFO_WIFISTATE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=532,
  serialized_end=691,
)


_GETSTATE_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='GetState.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19,
  serialized_end=28,
)

_GETSTATE_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='GetState.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='GetState.Response.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protocol_version', full_name='GetState.Response.protocol_version', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='wifi_info', full_name='GetState.Response.wifi_info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kit_id', full_name='GetState.Response.kit_id', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='GetState.Response.device_name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=718,
  serialized_end=854,
)

_GETSTATE = _descriptor.Descriptor(
  name='GetState',
  full_name='GetState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_GETSTATE_REQUEST, _GETSTATE_RESPONSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=694,
  serialized_end=854,
)


_IDENTIFY_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='Identify.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='Identify.Request.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='extra', full_name='Identify.Request.extra', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=868,
  serialized_end=906,
)

_IDENTIFY_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='Identify.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Identify.Response.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='Identify.Response.data', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='extra', full_name='Identify.Response.extra', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=908,
  serialized_end=980,
)

_IDENTIFY = _descriptor.Descriptor(
  name='Identify',
  full_name='Identify',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_IDENTIFY_REQUEST, _IDENTIFY_RESPONSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=856,
  serialized_end=980,
)


_SCANNETWORKS_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='ScanNetworks.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timeout', full_name='ScanNetworks.Request.timeout', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=999,
  serialized_end=1025,
)

_SCANNETWORKS_RESPONSE_SCANRESULT = _descriptor.Descriptor(
  name='ScanResult',
  full_name='ScanNetworks.Response.ScanResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ssid', full_name='ScanNetworks.Response.ScanResult.ssid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='secure', full_name='ScanNetworks.Response.ScanResult.secure', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rssi', full_name='ScanNetworks.Response.ScanResult.rssi', index=2,
      number=3, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1125,
  serialized_end=1181,
)

_SCANNETWORKS_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ScanNetworks.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='ScanNetworks.Response.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='results', full_name='ScanNetworks.Response.results', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SCANNETWORKS_RESPONSE_SCANRESULT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1028,
  serialized_end=1181,
)

_SCANNETWORKS = _descriptor.Descriptor(
  name='ScanNetworks',
  full_name='ScanNetworks',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_SCANNETWORKS_REQUEST, _SCANNETWORKS_RESPONSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=983,
  serialized_end=1181,
)


_CONNECTNETWORK_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='ConnectNetwork.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timeout', full_name='ConnectNetwork.Request.timeout', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ssid', full_name='ConnectNetwork.Request.ssid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='psk', full_name='ConnectNetwork.Request.psk', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1202,
  serialized_end=1255,
)

_CONNECTNETWORK_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ConnectNetwork.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='ConnectNetwork.Response.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='wifi_info', full_name='ConnectNetwork.Response.wifi_info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1257,
  serialized_end=1330,
)

_CONNECTNETWORK = _descriptor.Descriptor(
  name='ConnectNetwork',
  full_name='ConnectNetwork',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_CONNECTNETWORK_REQUEST, _CONNECTNETWORK_RESPONSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1184,
  serialized_end=1330,
)


_SETDEVICENAME_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='SetDeviceName.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_name', full_name='SetDeviceName.Request.device_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1349,
  serialized_end=1379,
)

_SETDEVICENAME_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='SetDeviceName.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='SetDeviceName.Response.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='SetDeviceName.Response.device_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1381,
  serialized_end=1445,
)

_SETDEVICENAME = _descriptor.Descriptor(
  name='SetDeviceName',
  full_name='SetDeviceName',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_SETDEVICENAME_REQUEST, _SETDEVICENAME_RESPONSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1332,
  serialized_end=1445,
)

_REQUEST.fields_by_name['get_state'].message_type = _GETSTATE_REQUEST
_REQUEST.fields_by_name['identify'].message_type = _IDENTIFY_REQUEST
_REQUEST.fields_by_name['scan_networks'].message_type = _SCANNETWORKS_REQUEST
_REQUEST.fields_by_name['connect_network'].message_type = _CONNECTNETWORK_REQUEST
_REQUEST.fields_by_name['set_device_name'].message_type = _SETDEVICENAME_REQUEST
_REQUEST.oneofs_by_name['request'].fields.append(
  _REQUEST.fields_by_name['get_state'])
_REQUEST.fields_by_name['get_state'].containing_oneof = _REQUEST.oneofs_by_name['request']
_REQUEST.oneofs_by_name['request'].fields.append(
  _REQUEST.fields_by_name['identify'])
_REQUEST.fields_by_name['identify'].containing_oneof = _REQUEST.oneofs_by_name['request']
_REQUEST.oneofs_by_name['request'].fields.append(
  _REQUEST.fields_by_name['scan_networks'])
_REQUEST.fields_by_name['scan_networks'].containing_oneof = _REQUEST.oneofs_by_name['request']
_REQUEST.oneofs_by_name['request'].fields.append(
  _REQUEST.fields_by_name['connect_network'])
_REQUEST.fields_by_name['connect_network'].containing_oneof = _REQUEST.oneofs_by_name['request']
_REQUEST.oneofs_by_name['request'].fields.append(
  _REQUEST.fields_by_name['set_device_name'])
_REQUEST.fields_by_name['set_device_name'].containing_oneof = _REQUEST.oneofs_by_name['request']
_RESPONSE.fields_by_name['get_state'].message_type = _GETSTATE_RESPONSE
_RESPONSE.fields_by_name['identify'].message_type = _IDENTIFY_RESPONSE
_RESPONSE.fields_by_name['scan_networks'].message_type = _SCANNETWORKS_RESPONSE
_RESPONSE.fields_by_name['connect_network'].message_type = _CONNECTNETWORK_RESPONSE
_RESPONSE.fields_by_name['set_device_name'].message_type = _SETDEVICENAME_RESPONSE
_RESPONSE.oneofs_by_name['response'].fields.append(
  _RESPONSE.fields_by_name['get_state'])
_RESPONSE.fields_by_name['get_state'].containing_oneof = _RESPONSE.oneofs_by_name['response']
_RESPONSE.oneofs_by_name['response'].fields.append(
  _RESPONSE.fields_by_name['identify'])
_RESPONSE.fields_by_name['identify'].containing_oneof = _RESPONSE.oneofs_by_name['response']
_RESPONSE.oneofs_by_name['response'].fields.append(
  _RESPONSE.fields_by_name['scan_networks'])
_RESPONSE.fields_by_name['scan_networks'].containing_oneof = _RESPONSE.oneofs_by_name['response']
_RESPONSE.oneofs_by_name['response'].fields.append(
  _RESPONSE.fields_by_name['connect_network'])
_RESPONSE.fields_by_name['connect_network'].containing_oneof = _RESPONSE.oneofs_by_name['response']
_RESPONSE.oneofs_by_name['response'].fields.append(
  _RESPONSE.fields_by_name['set_device_name'])
_RESPONSE.fields_by_name['set_device_name'].containing_oneof = _RESPONSE.oneofs_by_name['response']
_WIFIINFO.fields_by_name['state'].enum_type = _WIFIINFO_WIFISTATE
_WIFIINFO_WIFISTATE.containing_type = _WIFIINFO
_GETSTATE_REQUEST.containing_type = _GETSTATE
_GETSTATE_RESPONSE.fields_by_name['status'].enum_type = _RESPONSESTATUS
_GETSTATE_RESPONSE.fields_by_name['wifi_info'].message_type = _WIFIINFO
_GETSTATE_RESPONSE.containing_type = _GETSTATE
_IDENTIFY_REQUEST.containing_type = _IDENTIFY
_IDENTIFY_RESPONSE.fields_by_name['status'].enum_type = _RESPONSESTATUS
_IDENTIFY_RESPONSE.containing_type = _IDENTIFY
_SCANNETWORKS_REQUEST.containing_type = _SCANNETWORKS
_SCANNETWORKS_RESPONSE_SCANRESULT.containing_type = _SCANNETWORKS_RESPONSE
_SCANNETWORKS_RESPONSE.fields_by_name['status'].enum_type = _RESPONSESTATUS
_SCANNETWORKS_RESPONSE.fields_by_name['results'].message_type = _SCANNETWORKS_RESPONSE_SCANRESULT
_SCANNETWORKS_RESPONSE.containing_type = _SCANNETWORKS
_CONNECTNETWORK_REQUEST.containing_type = _CONNECTNETWORK
_CONNECTNETWORK_RESPONSE.fields_by_name['status'].enum_type = _RESPONSESTATUS
_CONNECTNETWORK_RESPONSE.fields_by_name['wifi_info'].message_type = _WIFIINFO
_CONNECTNETWORK_RESPONSE.containing_type = _CONNECTNETWORK
_SETDEVICENAME_REQUEST.containing_type = _SETDEVICENAME
_SETDEVICENAME_RESPONSE.fields_by_name['status'].enum_type = _RESPONSESTATUS
_SETDEVICENAME_RESPONSE.containing_type = _SETDEVICENAME
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['WifiInfo'] = _WIFIINFO
DESCRIPTOR.message_types_by_name['GetState'] = _GETSTATE
DESCRIPTOR.message_types_by_name['Identify'] = _IDENTIFY
DESCRIPTOR.message_types_by_name['ScanNetworks'] = _SCANNETWORKS
DESCRIPTOR.message_types_by_name['ConnectNetwork'] = _CONNECTNETWORK
DESCRIPTOR.message_types_by_name['SetDeviceName'] = _SETDEVICENAME
DESCRIPTOR.enum_types_by_name['ResponseStatus'] = _RESPONSESTATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:Request)
  ))
_sym_db.RegisterMessage(Request)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:Response)
  ))
_sym_db.RegisterMessage(Response)

WifiInfo = _reflection.GeneratedProtocolMessageType('WifiInfo', (_message.Message,), dict(
  DESCRIPTOR = _WIFIINFO,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:WifiInfo)
  ))
_sym_db.RegisterMessage(WifiInfo)

GetState = _reflection.GeneratedProtocolMessageType('GetState', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _GETSTATE_REQUEST,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:GetState.Request)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETSTATE_RESPONSE,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:GetState.Response)
    ))
  ,
  DESCRIPTOR = _GETSTATE,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:GetState)
  ))
_sym_db.RegisterMessage(GetState)
_sym_db.RegisterMessage(GetState.Request)
_sym_db.RegisterMessage(GetState.Response)

Identify = _reflection.GeneratedProtocolMessageType('Identify', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _IDENTIFY_REQUEST,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:Identify.Request)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _IDENTIFY_RESPONSE,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:Identify.Response)
    ))
  ,
  DESCRIPTOR = _IDENTIFY,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:Identify)
  ))
_sym_db.RegisterMessage(Identify)
_sym_db.RegisterMessage(Identify.Request)
_sym_db.RegisterMessage(Identify.Response)

ScanNetworks = _reflection.GeneratedProtocolMessageType('ScanNetworks', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _SCANNETWORKS_REQUEST,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:ScanNetworks.Request)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(

    ScanResult = _reflection.GeneratedProtocolMessageType('ScanResult', (_message.Message,), dict(
      DESCRIPTOR = _SCANNETWORKS_RESPONSE_SCANRESULT,
      __module__ = 'messages_pb2'
      # @@protoc_insertion_point(class_scope:ScanNetworks.Response.ScanResult)
      ))
    ,
    DESCRIPTOR = _SCANNETWORKS_RESPONSE,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:ScanNetworks.Response)
    ))
  ,
  DESCRIPTOR = _SCANNETWORKS,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:ScanNetworks)
  ))
_sym_db.RegisterMessage(ScanNetworks)
_sym_db.RegisterMessage(ScanNetworks.Request)
_sym_db.RegisterMessage(ScanNetworks.Response)
_sym_db.RegisterMessage(ScanNetworks.Response.ScanResult)

ConnectNetwork = _reflection.GeneratedProtocolMessageType('ConnectNetwork', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _CONNECTNETWORK_REQUEST,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:ConnectNetwork.Request)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _CONNECTNETWORK_RESPONSE,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:ConnectNetwork.Response)
    ))
  ,
  DESCRIPTOR = _CONNECTNETWORK,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:ConnectNetwork)
  ))
_sym_db.RegisterMessage(ConnectNetwork)
_sym_db.RegisterMessage(ConnectNetwork.Request)
_sym_db.RegisterMessage(ConnectNetwork.Response)

SetDeviceName = _reflection.GeneratedProtocolMessageType('SetDeviceName', (_message.Message,), dict(

  Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
    DESCRIPTOR = _SETDEVICENAME_REQUEST,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:SetDeviceName.Request)
    ))
  ,

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _SETDEVICENAME_RESPONSE,
    __module__ = 'messages_pb2'
    # @@protoc_insertion_point(class_scope:SetDeviceName.Response)
    ))
  ,
  DESCRIPTOR = _SETDEVICENAME,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:SetDeviceName)
  ))
_sym_db.RegisterMessage(SetDeviceName)
_sym_db.RegisterMessage(SetDeviceName.Request)
_sym_db.RegisterMessage(SetDeviceName.Response)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n!com.google.android.apps.aiy.proto'))
# @@protoc_insertion_point(module_scope)
